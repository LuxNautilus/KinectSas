import org.openkinect.processing.*;

Kinect kinect;

float minThresh = 600;
float maxThresh = 700 ;
PImage img;

void setup() {
  size(640, 480);
  background (50);
  kinect = new Kinect(this);
  kinect.initDepth();
img = createImage(kinect.width, kinect.height, RGB);
 // ps = new ParticleSystem(new PVector(width/2, 50));
}
  
  void draw() {
    img.loadPixels();
      int[] depth = kinect.getRawDepth();

  float sumX = 0;
  float sumY = 0;
  float totalPixels = 0;

  for (int x = 0; x < kinect.width; x++) {
    for (int y = 0; y < kinect.height; y++) {
      int offset = x + y * kinect.width;
      int d = depth[offset];

      if (d > minThresh && d < maxThresh ) {
        img.pixels[offset] = color(255, 0, 150);

        sumX += x;
        sumY += y;
        totalPixels++;
      }
        else if (d > (minThresh+200) && d < (maxThresh+200)) {
        img.pixels[offset] = color(0, 0, 255);}
       else {
      img.pixels[offset] = color(0);
      }
    }
  }
float avgX = sumX / totalPixels;
  float avgY = sumY / totalPixels;
  fill(255,0,0);
  stroke (255,0,0);
  ellipse(avgX, avgY, 300, 300);
  

    
  
  }
